@256
D=A
@SP
M=D
// function Sys.init 0
(Sys.init)
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
// push 4000
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop Pointer
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push 5000
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop Pointer
@THAT
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// call Sys.main 0
@Sys.main_return_5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.main_return_5)
// pop Temp
@R6
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label LOOP
(LOOP)
// goto LOOP
@LOOP
0;JMP
// function Sys.main 5
(Sys.main)
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
// push 4001
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop Pointer
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push 5001
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop Pointer
@THAT
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop LCL
@LCL
D=M
@1
D=A+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop LCL
@LCL
D=M
@2
D=A+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop LCL
@LCL
D=M
@3
D=A+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Sys.add12 1
@Sys.add12_return_21
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.add12_return_21)
// pop Temp
@R5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// pop LCL
@LCL
D=M
@0
D=A+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop LCL
@LCL
D=M
@1
D=A+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop LCL
@LCL
D=M
@2
D=A+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop LCL
@LCL
D=M
@3
D=A+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop LCL
@LCL
D=M
@4
D=A+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M-1
D=M+D
M=D
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M-1
D=M+D
M=D
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M-1
D=M+D
M=D
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M-1
D=M+D
M=D
// return
@LCL
D=M
@R14
M=D
@R14
D=M
@5
A=D-A
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP
// function Sys.add12 0
(Sys.add12)
@0
@SP
A=M
M=D
@SP
M=M+1
@0
@SP
A=M
M=D
@SP
M=M+1
// push 4002
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop Pointer
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push 5002
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop Pointer
@THAT
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// pop ARG
@ARG
D=M
@0
D=A+D
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M-1
D=M+D
M=D
// return
@LCL
D=M
@R14
M=D
@R14
D=M
@5
A=D-A
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP
