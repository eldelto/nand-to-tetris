// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=registerLoad0, b=registerLoad1, c=registerLoad2, d=registerLoad3, e=registerLoad4, f=registerLoad5, g=registerLoad6, h=registerLoad7);
    Register(in=in, load=registerLoad0, out=registerOut0);
    Register(in=in, load=registerLoad1, out=registerOut1);
    Register(in=in, load=registerLoad2, out=registerOut2);
    Register(in=in, load=registerLoad3, out=registerOut3);
    Register(in=in, load=registerLoad4, out=registerOut4);
    Register(in=in, load=registerLoad5, out=registerOut5);
    Register(in=in, load=registerLoad6, out=registerOut6);
    Register(in=in, load=registerLoad7, out=registerOut7);
    Mux8Way16(a=registerOut0, b=registerOut1, c=registerOut2, d=registerOut3, e=registerOut4, f=registerOut5, g=registerOut6, h=registerOut7, sel=address, out=out);
}

