Right(List(ClassNode(Square,List(KeywordNode(class), IdentifierNode(Square), KeywordNode({), ClassVarDecNode(List(SingleVariableDec(x,int,Field), SingleVariableDec(y,int,Field))), ClassVarDecNode(List(SingleVariableDec(size,int,Field))), SubroutineDecNode(Constructor,new,Square,ParameterListNode(List(SingleVariableDec(Ax,int,Argument), SingleVariableDec(Ay,int,Argument), SingleVariableDec(Asize,int,Argument))),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(Ax))), KeywordNode(;))), LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(Ay))), KeywordNode(;))), LetStatementNode(size,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(Asize))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(draw,ExpressionListNode(List()),List(IdentifierNode(draw), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), ReturnStatementNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(this)))), KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,dispose,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(Memory.deAlloc,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(this)))))),List(IdentifierNode(Memory), KeywordNode(.), IdentifierNode(deAlloc), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(this)))))), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,draw,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,erase,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,incSize,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(IfStatementNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(<), LiteralTermNode(IntegerConstantNode(254))))), KeywordNode(&), PriorityTermNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(<), LiteralTermNode(IntegerConstantNode(510))))))),StatementsNode(List(DoStatementNode(SubroutineCallNode(erase,ExpressionListNode(List()),List(IdentifierNode(erase), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), LetStatementNode(size,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(size), KeywordNode(+), LiteralTermNode(IntegerConstantNode(2)))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(draw,ExpressionListNode(List()),List(IdentifierNode(draw), KeywordNode((), ExpressionListNode(List()), KeywordNode())))))),None), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,decSize,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(size), KeywordNode(>), LiteralTermNode(IntegerConstantNode(2)))),StatementsNode(List(DoStatementNode(SubroutineCallNode(erase,ExpressionListNode(List()),List(IdentifierNode(erase), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), LetStatementNode(size,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(size), KeywordNode(-), LiteralTermNode(IntegerConstantNode(2)))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(draw,ExpressionListNode(List()),List(IdentifierNode(draw), KeywordNode((), ExpressionListNode(List()), KeywordNode())))))),None), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,moveUp,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(>), LiteralTermNode(IntegerConstantNode(1)))),StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))), LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(-), LiteralTermNode(IntegerConstantNode(2)))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))))), KeywordNode())))))),None), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,moveDown,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(IfStatementNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(<), LiteralTermNode(IntegerConstantNode(254)))),StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))))), KeywordNode())))), LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(2)))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))))),None), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,moveLeft,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(>), LiteralTermNode(IntegerConstantNode(1)))),StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))), LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(-), LiteralTermNode(IntegerConstantNode(2)))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))))),None), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,moveRight,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(IfStatementNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(<), LiteralTermNode(IntegerConstantNode(510)))),StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))), LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(2)))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size)))), KeywordNode(-), LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), IdentifierTermNode(size))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), IdentifierTermNode(size))))), KeywordNode())))))),None), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), KeywordNode(})))))