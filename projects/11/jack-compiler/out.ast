Right(List(ClassNode(Ball,List(KeywordNode(class), IdentifierNode(Ball), KeywordNode({), ClassVarDecNode(List(SingleVariableDec(x,int,Field), SingleVariableDec(y,int,Field))), ClassVarDecNode(List(SingleVariableDec(lengthx,int,Field), SingleVariableDec(lengthy,int,Field))), ClassVarDecNode(List(SingleVariableDec(d,int,Field), SingleVariableDec(straightD,int,Field), SingleVariableDec(diagonalD,int,Field))), ClassVarDecNode(List(SingleVariableDec(invert,boolean,Field), SingleVariableDec(positivex,boolean,Field), SingleVariableDec(positivey,boolean,Field))), ClassVarDecNode(List(SingleVariableDec(leftWall,int,Field), SingleVariableDec(rightWall,int,Field), SingleVariableDec(topWall,int,Field), SingleVariableDec(bottomWall,int,Field))), ClassVarDecNode(List(SingleVariableDec(wall,int,Field))), SubroutineDecNode(Constructor,new,Ball,ParameterListNode(List(SingleVariableDec(Ax,int,Argument), SingleVariableDec(Ay,int,Argument), SingleVariableDec(AleftWall,int,Argument), SingleVariableDec(ArightWall,int,Argument), SingleVariableDec(AtopWall,int,Argument), SingleVariableDec(AbottomWall,int,Argument))),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(Ax))), KeywordNode(;))), LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(Ay))), KeywordNode(;))), LetStatementNode(leftWall,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(AleftWall))), KeywordNode(;))), LetStatementNode(rightWall,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(ArightWall), KeywordNode(-), LiteralTermNode(IntegerConstantNode(6)))), KeywordNode(;))), LetStatementNode(topWall,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(AtopWall))), KeywordNode(;))), LetStatementNode(bottomWall,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(AbottomWall), KeywordNode(-), LiteralTermNode(IntegerConstantNode(6)))), KeywordNode(;))), LetStatementNode(wall,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(0)))), KeywordNode(;))), DoStatementNode(SubroutineCallNode(show,ExpressionListNode(List()),List(IdentifierNode(show), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), ReturnStatementNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(this)))), KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,dispose,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(Memory.deAlloc,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(this)))))),List(IdentifierNode(Memory), KeywordNode(.), IdentifierNode(deAlloc), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(this)))))), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,show,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(true)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(draw,ExpressionListNode(List()),List(IdentifierNode(draw), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,hide,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.setColor,ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(setColor), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(LiteralTermNode(KeywordNode(false)))))), KeywordNode())))), DoStatementNode(SubroutineCallNode(draw,ExpressionListNode(List()),List(IdentifierNode(draw), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,draw,void,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(Screen.drawRectangle,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(5)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(5)))))),List(IdentifierNode(Screen), KeywordNode(.), IdentifierNode(drawRectangle), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(5)))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(5)))))), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,getLeft,int,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(ReturnStatementNode(List(ExpressionNode(List(IdentifierTermNode(x))), KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,getRight,int,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(ReturnStatementNode(List(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(5)))), KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,setDestination,void,ParameterListNode(List(SingleVariableDec(destx,int,Argument), SingleVariableDec(desty,int,Argument))),SubroutineBodyNode(List(KeywordNode({), VarDecNode(List(SingleVariableDec(dx,int,Local), SingleVariableDec(dy,int,Local), SingleVariableDec(temp,int,Local))), StatementsNode(List(LetStatementNode(lengthx,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(destx), KeywordNode(-), IdentifierTermNode(x))), KeywordNode(;))), LetStatementNode(lengthy,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(desty), KeywordNode(-), IdentifierTermNode(y))), KeywordNode(;))), LetStatementNode(dx,List(KeywordNode(=), ExpressionNode(List(GenericTermNode(List(SubroutineCallNode(Math.abs,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(lengthx))))),List(IdentifierNode(Math), KeywordNode(.), IdentifierNode(abs), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(lengthx))))), KeywordNode()))))))), KeywordNode(;))), LetStatementNode(dy,List(KeywordNode(=), ExpressionNode(List(GenericTermNode(List(SubroutineCallNode(Math.abs,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(lengthy))))),List(IdentifierNode(Math), KeywordNode(.), IdentifierNode(abs), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(lengthy))))), KeywordNode()))))))), KeywordNode(;))), LetStatementNode(invert,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(dx), KeywordNode(<), IdentifierTermNode(dy)))))), KeywordNode(;))), IfStatementNode(ExpressionNode(List(IdentifierTermNode(invert))),StatementsNode(List(LetStatementNode(temp,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(dx))), KeywordNode(;))), LetStatementNode(dx,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(dy))), KeywordNode(;))), LetStatementNode(dy,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(temp))), KeywordNode(;))), LetStatementNode(positivex,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(<), IdentifierTermNode(desty)))))), KeywordNode(;))), LetStatementNode(positivey,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(<), IdentifierTermNode(destx)))))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(positivex,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(<), IdentifierTermNode(destx)))))), KeywordNode(;))), LetStatementNode(positivey,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(<), IdentifierTermNode(desty)))))), KeywordNode(;))))))), LetStatementNode(d,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(LiteralTermNode(IntegerConstantNode(2)), KeywordNode(*), IdentifierTermNode(dy)))), KeywordNode(-), IdentifierTermNode(dx))), KeywordNode(;))), LetStatementNode(straightD,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(2)), KeywordNode(*), IdentifierTermNode(dy))), KeywordNode(;))), LetStatementNode(diagonalD,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(2)), KeywordNode(*), PriorityTermNode(ExpressionNode(List(IdentifierTermNode(dy), KeywordNode(-), IdentifierTermNode(dx)))))), KeywordNode(;))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,move,int,ParameterListNode(List()),SubroutineBodyNode(List(KeywordNode({), StatementsNode(List(DoStatementNode(SubroutineCallNode(hide,ExpressionListNode(List()),List(IdentifierNode(hide), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), IfStatementNode(ExpressionNode(List(IdentifierTermNode(d), KeywordNode(<), LiteralTermNode(IntegerConstantNode(0)))),StatementsNode(List(LetStatementNode(d,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(d), KeywordNode(+), IdentifierTermNode(straightD))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(d,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(d), KeywordNode(+), IdentifierTermNode(diagonalD))), KeywordNode(;))), IfStatementNode(ExpressionNode(List(IdentifierTermNode(positivey))),StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(invert))),StatementsNode(List(LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))))))),Some(StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(invert))),StatementsNode(List(LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(-), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(-), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))))))))))))), IfStatementNode(ExpressionNode(List(IdentifierTermNode(positivex))),StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(invert))),StatementsNode(List(LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))))))),Some(StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(invert))),StatementsNode(List(LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(-), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(-), LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))))))))))), IfStatementNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(~,PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(>), IdentifierTermNode(leftWall))))))))),StatementsNode(List(LetStatementNode(wall,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(1)))), KeywordNode(;))), LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(leftWall))), KeywordNode(;))))),None), IfStatementNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(~,PriorityTermNode(ExpressionNode(List(IdentifierTermNode(x), KeywordNode(<), IdentifierTermNode(rightWall))))))))),StatementsNode(List(LetStatementNode(wall,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(2)))), KeywordNode(;))), LetStatementNode(x,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(rightWall))), KeywordNode(;))))),None), IfStatementNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(~,PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(>), IdentifierTermNode(topWall))))))))),StatementsNode(List(LetStatementNode(wall,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(3)))), KeywordNode(;))), LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(topWall))), KeywordNode(;))))),None), IfStatementNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(~,PriorityTermNode(ExpressionNode(List(IdentifierTermNode(y), KeywordNode(<), IdentifierTermNode(bottomWall))))))))),StatementsNode(List(LetStatementNode(wall,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(4)))), KeywordNode(;))), LetStatementNode(y,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(bottomWall))), KeywordNode(;))))),None), DoStatementNode(SubroutineCallNode(show,ExpressionListNode(List()),List(IdentifierNode(show), KeywordNode((), ExpressionListNode(List()), KeywordNode())))), ReturnStatementNode(List(ExpressionNode(List(IdentifierTermNode(wall))), KeywordNode(;))))), KeywordNode(})))), SubroutineDecNode(Method,bounce,void,ParameterListNode(List(SingleVariableDec(bouncingDirection,int,Argument))),SubroutineBodyNode(List(KeywordNode({), VarDecNode(List(SingleVariableDec(newx,int,Local), SingleVariableDec(newy,int,Local), SingleVariableDec(divLengthx,int,Local), SingleVariableDec(divLengthy,int,Local), SingleVariableDec(factor,int,Local))), StatementsNode(List(LetStatementNode(divLengthx,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(lengthx), KeywordNode(/), LiteralTermNode(IntegerConstantNode(10)))), KeywordNode(;))), LetStatementNode(divLengthy,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(lengthy), KeywordNode(/), LiteralTermNode(IntegerConstantNode(10)))), KeywordNode(;))), IfStatementNode(ExpressionNode(List(IdentifierTermNode(bouncingDirection), KeywordNode(=), LiteralTermNode(IntegerConstantNode(0)))),StatementsNode(List(LetStatementNode(factor,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(10)))), KeywordNode(;))))),Some(StatementsNode(List(IfStatementNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(~,PriorityTermNode(ExpressionNode(List(IdentifierTermNode(lengthx), KeywordNode(<), LiteralTermNode(IntegerConstantNode(0))))))))))), KeywordNode(&), PriorityTermNode(ExpressionNode(List(IdentifierTermNode(bouncingDirection), KeywordNode(=), LiteralTermNode(IntegerConstantNode(1)))))))), KeywordNode(|), PriorityTermNode(ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(lengthx), KeywordNode(<), LiteralTermNode(IntegerConstantNode(0))))), KeywordNode(&), PriorityTermNode(ExpressionNode(List(IdentifierTermNode(bouncingDirection), KeywordNode(=), PriorityTermNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(-,LiteralTermNode(IntegerConstantNode(1)))))))))))))))),StatementsNode(List(LetStatementNode(factor,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(20)))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(factor,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(5)))), KeywordNode(;))))))))))), IfStatementNode(ExpressionNode(List(IdentifierTermNode(wall), KeywordNode(=), LiteralTermNode(IntegerConstantNode(1)))),StatementsNode(List(LetStatementNode(newx,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(506)))), KeywordNode(;))), LetStatementNode(newy,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(divLengthy), KeywordNode(*), PriorityTermNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(-,LiteralTermNode(IntegerConstantNode(50))))))))))), KeywordNode(/), IdentifierTermNode(divLengthx))), KeywordNode(;))), LetStatementNode(newy,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), PriorityTermNode(ExpressionNode(List(IdentifierTermNode(newy), KeywordNode(*), IdentifierTermNode(factor)))))), KeywordNode(;))))),Some(StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(wall), KeywordNode(=), LiteralTermNode(IntegerConstantNode(2)))),StatementsNode(List(LetStatementNode(newx,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(0)))), KeywordNode(;))), LetStatementNode(newy,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(divLengthy), KeywordNode(*), LiteralTermNode(IntegerConstantNode(50))))), KeywordNode(/), IdentifierTermNode(divLengthx))), KeywordNode(;))), LetStatementNode(newy,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(y), KeywordNode(+), PriorityTermNode(ExpressionNode(List(IdentifierTermNode(newy), KeywordNode(*), IdentifierTermNode(factor)))))), KeywordNode(;))))),Some(StatementsNode(List(IfStatementNode(ExpressionNode(List(IdentifierTermNode(wall), KeywordNode(=), LiteralTermNode(IntegerConstantNode(3)))),StatementsNode(List(LetStatementNode(newy,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(250)))), KeywordNode(;))), LetStatementNode(newx,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(divLengthx), KeywordNode(*), PriorityTermNode(ExpressionNode(List(GenericTermNode(List(UnaryTermNode(-,LiteralTermNode(IntegerConstantNode(25))))))))))), KeywordNode(/), IdentifierTermNode(divLengthy))), KeywordNode(;))), LetStatementNode(newx,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), PriorityTermNode(ExpressionNode(List(IdentifierTermNode(newx), KeywordNode(*), IdentifierTermNode(factor)))))), KeywordNode(;))))),Some(StatementsNode(List(LetStatementNode(newy,List(KeywordNode(=), ExpressionNode(List(LiteralTermNode(IntegerConstantNode(0)))), KeywordNode(;))), LetStatementNode(newx,List(KeywordNode(=), ExpressionNode(List(PriorityTermNode(ExpressionNode(List(IdentifierTermNode(divLengthx), KeywordNode(*), LiteralTermNode(IntegerConstantNode(25))))), KeywordNode(/), IdentifierTermNode(divLengthy))), KeywordNode(;))), LetStatementNode(newx,List(KeywordNode(=), ExpressionNode(List(IdentifierTermNode(x), KeywordNode(+), PriorityTermNode(ExpressionNode(List(IdentifierTermNode(newx), KeywordNode(*), IdentifierTermNode(factor)))))), KeywordNode(;))))))))))))))), DoStatementNode(SubroutineCallNode(setDestination,ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(newx))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(newy))))),List(IdentifierNode(setDestination), KeywordNode((), ExpressionListNode(List(ExpressionNode(List(IdentifierTermNode(newx))), KeywordNode(,), ExpressionNode(List(IdentifierTermNode(newy))))), KeywordNode())))), ReturnStatementNode(List(KeywordNode(;))))), KeywordNode(})))), KeywordNode(})))))